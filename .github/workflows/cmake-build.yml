name: CI Build & Package

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64, arm64]
    name: ${{ matrix.os }}-${{ matrix.arch }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup CMake & compiler
        uses: jwlawson/actions-setup-cmake@v3

      - name: Select platform
        if: matrix.os == 'windows-latest'
        run: choco install mingw make

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=17 \
            -DCMAKE_GENERATOR_PLATFORM=${{ matrix.arch == 'arm64' && matrix.os == 'windows-latest' && 'ARM' || matrix.arch == 'arm64' && (matrix.os == 'macos-latest' && 'arm64' || matrix.os == 'ubuntu-latest' && 'aarch64') || 'x64' }}

      - name: Build
        run: |
          cd build
          cmake --build . --config Release --parallel

      - name: Package build
        run: |
          cd build
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            & powershell Compress-Archive -Path Release\* -DestinationPath Decode-${{ matrix.os }}-${{ matrix.arch }}.zip
          else
            zip -j Decode-${{ matrix.os }}-${{ matrix.arch }}.zip *
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: Decode-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            build/Decode-${{ matrix.os }}-${{ matrix.arch }}.zip
